{"title":"T3-Stack组合拳","date":"2023-10-07T08:53:39.000Z","date_formatted":{"ll":"Oct 7, 2023","L":"10/07/2023","MM-DD":"10-07"},"link":"post/85996fbf0018","comments":true,"tags":["t3-stack"],"categories":["front-end"],"updated":"2024-03-11T03:21:43.673Z","content":"<h2 id=\"背景\">背景<a title=\"#背景\" href=\"#背景\"></a></h2>\n<p>在今年上半年 React 推出了 RSC，当时推特上一片谩骂（讽刺其梦回 PHP 时代），但同时，也间接的反映出 React 技术的发展自从 hooks 时代后一直没有什么声响</p>\n<blockquote>\n<p>虽然 React 一直在发展，但直到现在，twitter 上每天喷 React 的 useEffect 调用两次的 post 依然数不胜数 :P</p>\n</blockquote>\n<p>也是在那期间，横空出世的一套组合拳 <code>T3 Stack</code> 开始被广大 web dev 得知</p>\n<h2 id=\"它是什么\">它是什么<a title=\"#它是什么\" href=\"#它是什么\"></a></h2>\n<p><em>“T3 Stack”</em> 是由 <a href=\"https://twitter.com/t3dotgg\" target=\"_blank\">Theo↗</a> 创建的一个 web 开发技术栈，专注于简单性、模块化和全栈类型安全</p>\n<p>项目结构：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── README.md</span><br><span class=\"line\">├── next-env.d.ts</span><br><span class=\"line\">├── next.config.mjs</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── pnpm-lock.yaml</span><br><span class=\"line\">├── postcss.config.cjs</span><br><span class=\"line\">├── prettier.config.mjs</span><br><span class=\"line\">├── prisma</span><br><span class=\"line\">│   └── schema.prisma</span><br><span class=\"line\">├── public</span><br><span class=\"line\">│   └── favicon.ico</span><br><span class=\"line\">├── src</span><br><span class=\"line\">│   ├── env.mjs</span><br><span class=\"line\">│   ├── pages</span><br><span class=\"line\">│   │   ├── _app.tsx</span><br><span class=\"line\">│   │   ├── api</span><br><span class=\"line\">│   │   │   ├── auth</span><br><span class=\"line\">│   │   │   │   └── [...nextauth].ts</span><br><span class=\"line\">│   │   │   └── trpc</span><br><span class=\"line\">│   │   │       └── [trpc].ts</span><br><span class=\"line\">│   │   └── index.tsx</span><br><span class=\"line\">│   ├── server</span><br><span class=\"line\">│   │   ├── api</span><br><span class=\"line\">│   │   │   ├── root.ts</span><br><span class=\"line\">│   │   │   ├── routers</span><br><span class=\"line\">│   │   │   │   └── example.ts</span><br><span class=\"line\">│   │   │   └── trpc.ts</span><br><span class=\"line\">│   │   ├── auth.ts</span><br><span class=\"line\">│   │   └── db.ts</span><br><span class=\"line\">│   ├── styles</span><br><span class=\"line\">│   │   └── globals.css</span><br><span class=\"line\">│   └── utils</span><br><span class=\"line\">│       └── api.ts</span><br><span class=\"line\">├── tailwind.config.ts</span><br><span class=\"line\">└── tsconfig.json</span><br></pre></td></tr></table></figure>\n<p>技术栈包括：</p>\n<ul>\n<li>核心部分是 <a href=\"https://nextjs.org/\" target=\"_blank\"><strong>Next.js</strong>↗</a> 和 <a href=\"https://typescriptlang.org/\" target=\"_blank\"><strong>TypeScript</strong>↗</a></li>\n<li><a href=\"https://tailwindcss.com/\" target=\"_blank\"><strong>Tailwind CSS</strong>↗</a> 作为 css 框架</li>\n<li><a href=\"https://trpc.io/\" target=\"_blank\"><strong>tRPC</strong>↗</a>、<a href=\"https://prisma.io/\" target=\"_blank\"><strong>Prisma</strong>↗</a> 和 <a href=\"https://next-auth.js.org/\" target=\"_blank\"><strong>NextAuth.js</strong>↗</a> 作为服务端技术内嵌其中</li>\n</ul>\n<p>对于这种上来就给你内嵌了几个轮子的框架，值得让人去思考这些轮子的意义 (为什么需要 -&gt; 解决了什么问题 or 带来了什么帮助）</p>\n<p>本篇博客就是通过对这些技术栈的介绍，来分析其背后的意义</p>\n<h2 id=\"老生常谈的哥三儿\">老生常谈的哥三儿<a title=\"#老生常谈的哥三儿\" href=\"#老生常谈的哥三儿\"></a></h2>\n<h3 id=\"typescript\">TypeScript<a title=\"#typescript\" href=\"#typescript\"></a></h3>\n<p><s>类型安全有多重要，懂的自然懂，不懂的…</s></p>\n<h3 id=\"tailwind-css\">Tailwind CSS<a title=\"#tailwind-css\" href=\"#tailwind-css\"></a></h3>\n<p><s>原子化 CSS，懂的自然懂，不懂的…</s></p>\n<h3 id=\"next.-js\">Next. js<a title=\"#next.-js\" href=\"#next.-js\"></a></h3>\n<p>Next. js 本身是一门 SSR（服务端） 技术栈，反映了对 CSR（客户端渲染） 的优劣取舍</p>\n<p>作为 React 体系的 full-stack Web applications 代表作，Next. js 支持服务器渲染、静态生成和动态路由等功能，使开发人员能够构建高性能的 Web 应用程序</p>\n<p>常与 Next. js 摆在桌面上论道的是 Vue 体系的 Nuxt. js（且不说二者的实际开发体验，但就二者的官方文档比较来看，我单方面宣布 Next. js 胜出 dog.emoji）</p>\n<h2 id=\"后起之秀\">后起之秀<a title=\"#后起之秀\" href=\"#后起之秀\"></a></h2>\n<h3 id=\"prisma-——-优化数据库的对接问题\">Prisma —— 优化数据库的对接问题<a title=\"#prisma-——-优化数据库的对接问题\" href=\"#prisma-——-优化数据库的对接问题\"></a></h3>\n<blockquote>\n<p>[!NOTE]<br>\n对象关系映射（ORM）最早由 Java 中的 Hibernate 框架引入</p>\n<p>对象关系映射的最初目标是解决 Java 类和关系型数据库表之间的所谓阻抗不匹配问题。从这个想法发展出了更广泛的雄心勃勃的概念，即为应用程序提供一个通用的持久化层</p>\n<p>Prisma 是 Java ORM 层的现代 JavaScript 演进</p>\n</blockquote>\n<p>如果有过服务端开发经验自然对 ORM (Object-relational mapping) 并不陌生，而 Prisma 正是一个 TypeScript 写的 ORM 工具</p>\n<p>它相比传统 ORM 工具最大的优势在于：自动生成的模型和查询构建器（这意味着你不必手动编写查询语句或模型类，而是可以使用自动生成的 API 进行数据库操作）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/jiechen257/gallery@main/img/202310071653399.png\" alt=\"image.png\" loading=\"lazy\" class=\"φbp\"></p>\n<p>此外，支持多个数据库、现代异步 API、自动迁移和模式演化等等也是它众多的优点之一</p>\n<h3 id=\"trpc-——-保证前后端调用时的类型安全\">tRPC —— 保证前后端调用时的类型安全<a title=\"#trpc-——-保证前后端调用时的类型安全\" href=\"#trpc-——-保证前后端调用时的类型安全\"></a></h3>\n<blockquote>\n<p>RPC（Remote Procedure Call）是一种通信协议和编程模型，用于实现分布式系统中不同计算机或进程之间的远程调用。它允许一个计算机程序调用另一个地址空间（通常是在远程机器上运行的）的过程或函数，就像调用本地过程一样，而不需要开发者显式处理网络通信和数据传输的细节</p>\n</blockquote>\n<p>正如同 tRPC 官网所说：<code>The client below is **not** importing any code from the server, only its type declarations.</code><br>\n<img src=\"https://cdn.jsdelivr.net/gh/jiechen257/gallery@main/img/202310072044066.png\" alt=\"image\" loading=\"lazy\"></p>\n<p>相比于普通 RPC，tRPC 则是与 TypeScript 强绑定的一类 RPC</p>\n<ul>\n<li>类型安全：通过 tRPC，在编译和运行时，您可以确保输入和输出与您的 TypeScript 类型匹配。避免因参数改变而导致运行时崩溃是非常重要的。</li>\n<li>简易性：相比GraphQL，您不需要任何schemas或代码生成。您可以像平常一样编写函数，tRPC会顺利地处理其余部分。</li>\n<li>轻量级：tRPC是一个简单轻量的库，不会给您的应用程序增加过多的负担。它还支持以最小的延迟来流式传输数据</li>\n</ul>\n<h4 id=\"对比-rest-范式\">对比 REST 范式<a title=\"#对比-rest-范式\" href=\"#对比-rest-范式\"></a></h4>\n<p>REST 优势：</p>\n<ul>\n<li>熟悉性：你应该很熟悉 REST 吧？它是一种简单的 HTTP 协议，已经广为人知很长时间了。它是经典的网页开发协议。</li>\n<li>兼容性：REST可以与支持HTTP请求的任何语言或平台简单地配合使用。它也与现有的工具和框架（如Swagger或Postman）很好地集成。</li>\n<li>简单性：REST不需要任何特殊的语法或库来使用。你只需要遵循一些命名URL和方法的约定即可</li>\n</ul>\n<p>REST 劣势：</p>\n<ul>\n<li>容易冗长：你是否曾经处理过复杂或嵌套的数据结构？你可能需要进行多次请求或在网络上发送不必要的数据。</li>\n<li>不一致性：由于它没有标准的方式来定义或文档化API模式，这可能很快变得麻烦。如果你不是独立工作，你的同事可能会使用不同的样式或格式来编写他们的API，导致混乱或错误。</li>\n<li>效率低下：没有方便的过滤、排序或分页功能。你可能需要为每个用例创建新的端点或参数，这可能会增加API的复杂性</li>\n</ul>\n<h3 id=\"nextauth-.-js-——-集成在-next.-js-中的身份验证中间件\">NextAuth . js —— 集成在 Next. js 中的身份验证中间件<a title=\"#nextauth-.-js-——-集成在-next.-js-中的身份验证中间件\" href=\"#nextauth-.-js-——-集成在-next.-js-中的身份验证中间件\"></a></h3>\n<blockquote>\n<p>NextAuth. js is a complete open-source authentication solution for <a href=\"http://nextjs.org/\" target=\"_blank\">Next.js</a> applications.</p>\n<p>It is designed from the ground up to support Next. js and Serverless.</p>\n</blockquote>\n<p>NextAuth. js 简化了身份验证和授权流程的开发，提供了一种快速、安全和灵活的方式来添加用户认证功能到 Next. js 应用程序中</p>\n<p>初始化注入：</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// init.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">NextAuth</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;next-auth&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">GithubProvider</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;next-auth/providers/github&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> authOptions = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// Configure one or more authentication providers</span></span><br><span class=\"line\">  <span class=\"attr\">providers</span>: [</span><br><span class=\"line\">    <span class=\"title class_\">GithubProvider</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">clientId</span>: process.<span class=\"property\">env</span>.<span class=\"property\">GITHUB_ID</span>,</span><br><span class=\"line\">      <span class=\"attr\">clientSecret</span>: process.<span class=\"property\">env</span>.<span class=\"property\">GITHUB_SECRET</span>,</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// ...add more providers here</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">NextAuth</span>(authOptions)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// provider.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">SessionProvider</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;next-auth/react&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span> <span class=\"title function_\">App</span>(<span class=\"params\">&#123;</span></span><br><span class=\"line\"><span class=\"params\">  Component,</span></span><br><span class=\"line\"><span class=\"params\">  pageProps: &#123; session, ...pageProps &#125;,</span></span><br><span class=\"line\"><span class=\"params\">&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">SessionProvider</span> <span class=\"attr\">session</span>=<span class=\"string\">&#123;session&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Component</span> &#123;<span class=\"attr\">...pageProps</span>&#125; /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">SessionProvider</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用：</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// front-end</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; useSession, signIn, signOut &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;next-auth/react&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span> <span class=\"title function_\">Component</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; <span class=\"attr\">data</span>: session &#125; = <span class=\"title function_\">useSession</span>()</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (session) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        Signed in as &#123;session.user.email&#125; <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> signOut()&#125;&gt;Sign out<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      Not signed in <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> signIn()&#125;&gt;Sign in<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// back-end</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; getServerSession &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;next-auth/next&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; authOptions &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./auth/[...nextauth]&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">async</span> (req, res) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> session = <span class=\"keyword\">await</span> <span class=\"title function_\">getServerSession</span>(req, res, authOptions)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (session) &#123;</span><br><span class=\"line\">    res.<span class=\"title function_\">send</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">content</span>:</span><br><span class=\"line\">        <span class=\"string\">&quot;This is protected content. You can access this content because you are signed in.&quot;</span>,</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    res.<span class=\"title function_\">send</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">error</span>: <span class=\"string\">&quot;You must be signed in to view the protected content on this page.&quot;</span>,</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"zod——消除重复的类型声明\">Zod——消除重复的类型声明<a title=\"#zod——消除重复的类型声明\" href=\"#zod——消除重复的类型声明\"></a></h3>\n<p>Zod 本身也是在 T3-Stack 中的一项技术，虽然它在开头并未提及:(</p>\n<blockquote>\n<p>Zod 被设计成对开发者尽可能友好。其目的是消除重复的类型声明。使用 Zod，你只需声明 <em>一次</em> 验证器，Zod 就会自动推断出静态 TypeScript 类型。它很容易将较简单的类型组成复杂的数据结构。</p>\n</blockquote>\n<h4 id=\"类型验证\">类型验证<a title=\"#类型验证\" href=\"#类型验证\"></a></h4>\n<p>类型验证是验证数据结构是否符合特定类型的过程。您可以使用它来确保输入数据的有效性，以及记录和执行代码的数据结构。</p>\n<p>使用类型验证有两个主要好处：</p>\n<ul>\n<li>运行时的数据完整性：确保数据以正确的格式输入您的系统有助于避免错误并保持数据一致性。虽然 TypeScript 可以帮助您在编译时确保类型安全，但当您处理来自未知数据（例如服务器或用户输入）的数据时，类型验证在运行时会大放异彩。</li>\n<li>文档：一个好的类型验证库将为您使用的数据结构提供准确的类型定义。类型定义可用于为您的项目生成静态文档。</li>\n</ul>\n<h4 id=\"zod-示例\">Zod 示例<a title=\"#zod-示例\" href=\"#zod-示例\"></a></h4>\n<p>假设我们要验证用户输入的密码。我们希望密码是一个非空字符串，长度至少为 8 个字符，最多为 32 个字符：</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; z &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;zod&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> stringSchema = z.<span class=\"title function_\">string</span>().<span class=\"title function_\">nonempty</span>().<span class=\"title function_\">min</span>(<span class=\"number\">8</span>).<span class=\"title function_\">max</span>(<span class=\"number\">32</span>);</span><br><span class=\"line\">stringSchema.<span class=\"title function_\">parse</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">stringSchema.<span class=\"title function_\">parse</span>(<span class=\"string\">&quot;&quot;</span>); <span class=\"comment\">// throws an exception</span></span><br><span class=\"line\">stringSchema.<span class=\"title function_\">parse</span>(<span class=\"string\">&quot;I am a valid password&quot;</span>); <span class=\"comment\">// returns &quot;I am a valid password&quot;</span></span><br></pre></td></tr></table></figure>\n<p>当你运行上面的代码时，你会看到 parse 方法抛出了一个异常。异常将包含一个对象数组，其中包含 <code>ZodError</code> 错误的详细描述：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">[</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;code&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;too_small&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;minimum&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;string&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;inclusive&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;message&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Should be at least 1 characters&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;path&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;code&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;too_small&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;minimum&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">8</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;string&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;inclusive&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;message&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Should be at least 8 characters&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;path&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>\n<p>当您尝试解析有效字符串时，<code>parse</code> 将简单地返回其值</p>\n<h2 id=\"最后\">最后<a title=\"#最后\" href=\"#最后\"></a></h2>\n<p>总的来说，<code>T3 Stack</code> 旨在提供一个全面的开发技术栈，使开发人员能够构建现代、高性能、类型安全的 Web 应用程序，同时减少开发过程中的<strong>摩擦和复杂性</strong></p>\n<p>这个技术栈的组件和工具被精心选择，以满足各种 Web 开发需求</p>\n<h2 id=\"参考\">参考<a title=\"#参考\" href=\"#参考\"></a></h2>\n<ul>\n<li><a href=\"https://create.t3.gg/\" target=\"_blank\">Create T3 App</a></li>\n<li><a href=\"https://trpc.io/\" target=\"_blank\">tRPC - Move Fast and Break Nothing. End-to-end typesafe APIs made easy. | tRPC</a></li>\n<li><a href=\"https://juejin.cn/post/7262317630307221560\" target=\"_blank\">tRPC与REST和GraphQL 服务对比</a></li>\n</ul>\n","prev":{"title":"Go处理错误优雅化","link":"post/59a5727bc82c"},"next":{"title":"2023 前端技术趋势","link":"post/1438cca65161"},"plink":"https://becase.top/post/85996fbf0018/","toc":[{"id":"背景","title":"背景","index":"1"},{"id":"它是什么","title":"它是什么","index":"2"},{"id":"老生常谈的哥三儿","title":"老生常谈的哥三儿","index":"3","children":[{"id":"typescript","title":"TypeScript","index":"3.1"},{"id":"tailwind-css","title":"Tailwind CSS","index":"3.2"},{"id":"next.-js","title":"Next. js","index":"3.3"}]},{"id":"后起之秀","title":"后起之秀","index":"4","children":[{"id":"prisma-——-优化数据库的对接问题","title":"Prisma —— 优化数据库的对接问题","index":"4.1"},{"id":"trpc-——-保证前后端调用时的类型安全","title":"tRPC —— 保证前后端调用时的类型安全","index":"4.2"},{"id":"nextauth-.-js-——-集成在-next.-js-中的身份验证中间件","title":"NextAuth . js —— 集成在 Next. js 中的身份验证中间件","index":"4.3"},{"id":"zod——消除重复的类型声明","title":"Zod——消除重复的类型声明","index":"4.4"}]},{"id":"最后","title":"最后","index":"5"},{"id":"参考","title":"参考","index":"6"}],"reading_time":"2423 words in 16 min"}